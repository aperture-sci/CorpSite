version: '1.0'
stages:
  - clone
  - build
  - test
  - push
  - deploy


steps:

  clone:
    title: Cloning repository
    type: git-clone
    repo: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    revision: ${{CF_REVISION}}
    stage: clone

  build_application:
    title: "Building Globex website"
    image: maven:3.3-jdk-8
    working_directory: "${{clone}}"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    commands:
      - mvn -Dmaven.repo.local=/codefresh/volume/m2_repository package
    stage: "build"

  test:
    title: "Running test"
    image: maven:3.3-jdk-8
    working_directory: "${{clone}}"
    commands:
      - mvn -Dmaven.repo.local=/codefresh/volume/m2_repository test
    stage: "test"

  build_image:
    title: "Building tomcat container"
    type: "build"
    image_name: "lrochette/globex"
    working_directory: "${{clone}}"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    dockerfile: "Dockerfile"
    disable_push: true
    stage: "build"

  getVersion:
    title: "Get the image version from the repo"
    image: codefresh/cli
    working_directory: "${{clone}}"
    commands:
      - |
        export VERSION=$(cat version.txt | tr -d '\n')
        cf_export IMAGE_VERSION=$VERSION

  push:
    type: push
    title: "Pushing globex image"
    candidate: ${{build_image}}
    image_name: "lrochette/globex"
    tag: ${{IMAGE_VERSION}}
    registry: docker-lr
    stage: "push"


  cloneArgo:
    title: Cloning Gitops repository
    type: git-clone
    repo: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}_gitops
    revision: main
    stage: deploy

  updateVersion:
    title: update the version of the image
    image: codefresh/cli
    working_directory: "${{cloneArgo}}"
    commands:
      - yq -i '.spec.containers[0].image=lrochette/globex:env(IMAGE_VERSION)' deployment.yaml
